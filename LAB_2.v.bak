module LAB_2(clk, rst, F);

input clk, rst, a;
output F;
parameter s0= 4'b0000;
parameter s1= 4'b0001;
parameter s2= 4'b0001;
parameter s3= 4'b0010;
parameter s4= 4'b0011;


reg [3:0] state, next_state;

always @(posedge clk) begin

if (reset==1) state = s0;
else state = next_state;
end

always @ (state or a)
	case (state) 
	
	s0: begin 
		if (a==1) next_state = s1;
		else next_state = s0;
		end
	s1: begin 
		if (a==1) next_state = s1;
		else next_state = s2;
	s2: begin
		if (a==1) next_state = s1;
		else next_state = s3;
	s3: begin 
		if (a==1) next_state = s4;
		else next_state = s0;
	s4: begin
		if (a==1) next_state = s1;
		else next_state = s2;
		endcase
assign F = (state == next_state)? 1:0;

endmodule
